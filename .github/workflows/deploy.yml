name: Deploy to AWS Linux Docker

on:
  push:
    branches:
      - main  # `main` 브랜치에 push될 때 실행

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. 코드 체크아웃
      - name: Checkout Repository
        uses: actions/checkout@v3

      # 2. JDK 17 설정 (AWS 공식 GitHub Actions 사용)
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # 3. Gradle 빌드 (Spring Boot JAR 생성)
      - name: Build with Gradle
        run: |
          chmod +x gradlew
          ./gradlew clean bootJar -x test

      # 4. SSH 키 설정 및 접속 환경 구성
      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.AWS_SSH_KEY }}" | tee ~/.ssh/id_rsa > /dev/null
          chmod 600 ~/.ssh/id_rsa

      # 5. SSH 호스트 키 검증 비활성화
      - name: Disable SSH host key checking
        run: |
          echo -e "Host *\n\tStrictHostKeyChecking no\n" > ~/.ssh/config

      # 6. SSH 에이전트 시작 및 SSH 키 추가
      - name: Start SSH agent and add key
        run: |
          eval $(ssh-agent -s)
          echo "${{ secrets.AWS_SSH_KEY }}" | ssh-add - > /dev/null

      # 7. AWS 서버에 SSH 접속 및 Docker 컨테이너 배포
      - name: Deploy to AWS Docker
        run: |
          ssh -i ~/.ssh/id_rsa ec2-user@${{ secrets.AWS_HOST }} << 'EOF'
            # 1️⃣ Docker 환경 변수 설정
            export JASYPT_ENCRYPTOR_PASSWORD=${{ secrets.JASYPT_ENCRYPTOR_PASSWORD }}
            export DATABASE_HOST=${{ secrets.DATABASE_HOST }}
            export DATABASE_USERNAME=${{ secrets.DATABASE_USERNAME }}
            export DATABASE_PASSWORD=${{ secrets.DATABASE_PASSWORD }}

            # 2️⃣ 기존 컨테이너 중지 및 삭제
            docker stop zb-weather-diary-container || true
            docker rm zb-weather-diary-container || true

            # 3️⃣ 최신 코드 전송 및 빌드된 JAR 파일 업로드
            rm -rf ~/deploy
            mkdir -p ~/deploy
            scp -i ~/.ssh/id_rsa -r * ec2-user@${{ secrets.AWS_HOST }}:~/deploy

            # 4️⃣ Docker 컨테이너 실행
            docker build -t zb-weather-diary ~/deploy
            docker run -d --name zb-weather-diary-container \
              -e JASYPT_ENCRYPTOR_PASSWORD=${{ secrets.JASYPT_ENCRYPTOR_PASSWORD }} \
              -e DATABASE_HOST=${{ secrets.DATABASE_HOST }} \
              -e DATABASE_USERNAME=${{ secrets.DATABASE_USERNAME }} \
              -e DATABASE_PASSWORD=${{ secrets.DATABASE_PASSWORD }} \
              -p 8081:8081 \
              zb-weather-diary
          EOF
